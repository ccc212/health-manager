<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.healthmanager.manage.mapper.PsychologyOptionMapper">
    
    <resultMap type="PsychologyOption" id="PsychologyOptionResult">
        <result property="optionId"    column="option_id"    />
        <result property="optionName"    column="option_name"    />
        <result property="questionId"    column="question_id"    />
        <result property="optionText"    column="option_text"    />
        <result property="score"    column="score"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPsychologyOptionVo">
        select option_id, option_name, question_id, option_text, score, create_time, update_time from health_psychology_option
    </sql>

    <select id="selectPsychologyOptionList" parameterType="PsychologyOption" resultMap="PsychologyOptionResult">
        <include refid="selectPsychologyOptionVo"/>
        <where>  
            <if test="optionName != null  and optionName != ''"> and option_name like concat('%', #{optionName}, '%')</if>
            <if test="questionId != null "> and question_id = #{questionId}</if>
            <if test="optionText != null  and optionText != ''"> and option_text = #{optionText}</if>
            <if test="score != null "> and score = #{score}</if>
        </where>
    </select>
    
    <select id="selectPsychologyOptionByOptionId" parameterType="Long" resultMap="PsychologyOptionResult">
        <include refid="selectPsychologyOptionVo"/>
        where option_id = #{optionId}
    </select>

    <insert id="insertPsychologyOption" parameterType="PsychologyOption" useGeneratedKeys="true" keyProperty="optionId">
        insert into health_psychology_option
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="optionName != null and optionName != ''">option_name,</if>
            <if test="questionId != null">question_id,</if>
            <if test="optionText != null and optionText != ''">option_text,</if>
            <if test="score != null">score,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="optionName != null and optionName != ''">#{optionName},</if>
            <if test="questionId != null">#{questionId},</if>
            <if test="optionText != null and optionText != ''">#{optionText},</if>
            <if test="score != null">#{score},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePsychologyOption" parameterType="PsychologyOption">
        update health_psychology_option
        <trim prefix="SET" suffixOverrides=",">
            <if test="optionName != null and optionName != ''">option_name = #{optionName},</if>
            <if test="questionId != null">question_id = #{questionId},</if>
            <if test="optionText != null and optionText != ''">option_text = #{optionText},</if>
            <if test="score != null">score = #{score},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where option_id = #{optionId}
    </update>

    <delete id="deletePsychologyOptionByOptionId" parameterType="Long">
        delete from health_psychology_option where option_id = #{optionId}
    </delete>

    <delete id="deletePsychologyOptionByOptionIds" parameterType="String">
        delete from health_psychology_option where option_id in 
        <foreach item="optionId" collection="array" open="(" separator="," close=")">
            #{optionId}
        </foreach>
    </delete>
</mapper>