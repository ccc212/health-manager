<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.healthmanager.manage.mapper.DoctorScheduleMapper">
    
    <resultMap type="DoctorSchedule" id="DoctorScheduleResult">
        <result property="scheduleId"    column="schedule_id"    />
        <result property="doctorId"    column="doctor_id"    />
        <result property="date"    column="date"    />
        <result property="period"    column="period"    />
        <result property="quota"    column="quota"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectDoctorScheduleVo">
        select schedule_id, doctor_id, date, period, quota, status, create_time, update_time from health_doctor_schedule
    </sql>

    <select id="selectDoctorScheduleList" parameterType="DoctorSchedule" resultMap="DoctorScheduleResult">
        <include refid="selectDoctorScheduleVo"/>
        <where>  
            <if test="date != null "> and date = #{date}</if>
            <if test="period != null  and period != ''"> and period = #{period}</if>
            <if test="quota != null "> and quota = #{quota}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectDoctorScheduleByScheduleId" parameterType="Long" resultMap="DoctorScheduleResult">
        <include refid="selectDoctorScheduleVo"/>
        where schedule_id = #{scheduleId}
    </select>

    <insert id="insertDoctorSchedule" parameterType="DoctorSchedule" useGeneratedKeys="true" keyProperty="scheduleId">
        insert into health_doctor_schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="doctorId != null">doctor_id,</if>
            <if test="date != null">date,</if>
            <if test="period != null and period != ''">period,</if>
            <if test="quota != null">quota,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="doctorId != null">#{doctorId},</if>
            <if test="date != null">#{date},</if>
            <if test="period != null and period != ''">#{period},</if>
            <if test="quota != null">#{quota},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateDoctorSchedule" parameterType="DoctorSchedule">
        update health_doctor_schedule
        <trim prefix="SET" suffixOverrides=",">
            <if test="doctorId != null">doctor_id = #{doctorId},</if>
            <if test="date != null">date = #{date},</if>
            <if test="period != null and period != ''">period = #{period},</if>
            <if test="quota != null">quota = #{quota},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where schedule_id = #{scheduleId}
    </update>

    <delete id="deleteDoctorScheduleByScheduleId" parameterType="Long">
        delete from health_doctor_schedule where schedule_id = #{scheduleId}
    </delete>

    <delete id="deleteDoctorScheduleByScheduleIds" parameterType="String">
        delete from health_doctor_schedule where schedule_id in 
        <foreach item="scheduleId" collection="array" open="(" separator="," close=")">
            #{scheduleId}
        </foreach>
    </delete>
</mapper>